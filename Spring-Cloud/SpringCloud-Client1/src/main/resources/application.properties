server.port=8442spring.application.name=eureka-clienteureka.client.service-url.defaultZone=http://localhost:8761/eureka/,http://localhost:8762/eureka/## 作为注册服务器的消费者，必须保证这个property设置为true。eureka.client.fetch-registry=true## 定义服务续约任务的调用时间间隔eureka.instance.lease-renewal-interval-in-seconds=30## 定义服务失效的时间eureka.instance.lease-expiration-duration-in-seconds=90##是否开启eureka clienteureka.client.enabled=true## 定义从服务器获取注册信息的时间间隔eureka.client.registry-fetch-interval-seconds=30## Indicates whether or not this instance should register its information with eureka server for discovery by others.# In some cases, you do not want your instances to be discovered whereas you just want do discover other instances.eureka.client.register-with-eureka=true##Indicates whether or not this instance should register its information with eureka server for discovery by others.# In some cases, you do not want your instances to be discovered whereas you just want do discover other instances.eureka.client.allow-redirects=false##Indicates whether the eureka client should disable fetching of delta and should rather resort to getting the full registry information.# Note that the delta fetches can reduce the traffic tremendously, because the rate of change with the eureka server is normally much lower than the rate of fetches.# The changes are effective at runtime at the next registry fetch cycle as specified by registryFetchIntervalSecondseureka.client.disable-delta=false##Indicates how much time (in seconds) that the HTTP connections to eureka server can stay idle before it can be closed.# In the AWS environment, it is recommended that the values is 30 seconds or less, since the firewall cleans up the connection information after a few mins leaving the connection hanging in limboeureka.client.eureka-connection-idle-timeout-seconds=30##Indicates how long to wait (in seconds) before a connection to eureka server needs to timeout.# Note that the connections in the client are pooled by org.apache.http.client.HttpClient# and this setting affects the actual connection creation and also the wait time to get the connection from the pool.eureka.client.eureka-server-connect-timeout-seconds=5## Indicates how long to wait (in seconds) before a read from eureka server needs to timeout.eureka.client.eureka-server-read-timeout-seconds=8## Indicates how often(in seconds) to poll for changes to eureka server information. Eureka servers could be added or removed and this setting controls how soon the eureka clients should know about it.eureka.client.eureka-service-url-poll-interval-seconds=300##Indicates whether to get the applications after filtering the applications for instances with only InstanceStatus UP states.eureka.client.filter-only-up-instances=true## Indicates whether the content fetched from eureka server has to be compressed whenever it is supported by the server.# The registry information from the eureka server is compressed for optimum network traffic.eureka.client.g-zip-content=true## The thread pool size for the heartbeatExecutor to initialise witheureka.client.heartbeat-executor-thread-pool-size=2## Heartbeat executor exponential back off related property. It is a maximum multiplier value for retry delay, in case where a sequence of timeouts occurred.eureka.client.heartbeat-executor-exponential-back-off-bound=10eureka.client.initial-instance-info-replication-interval-seconds=40#Indicates how often(in seconds) to replicate instance changes to be replicated to the eureka server.eureka.client.instance-info-replication-interval-seconds=30##Indicates whether to log differences between the eureka server and the eureka client in terms of registry information.# Eureka client tries to retrieve only delta changes from eureka server to minimize network traffic.# After receiving the deltas, eureka client reconciles the information from the server to verify it has not missed out some information.# Reconciliation failures could happen when the client has had network issues communicating to server.# If the reconciliation fails, eureka client gets the full registry information.# While getting the full registry information, the eureka client can log the differences between the client and the server and this setting controls that.# The changes are effective at runtime at the next registry fetch cycle as specified by registryFetchIntervalSecondsreureka.client.log-delta-diff=false## Indicates whether or not this instance should try to use the eureka server in the same zone for latency and/or other reason.# Ideally eureka clients are configured to talk to servers in the same zone The changes are effective at runtime at the next registry fetch cycle as specified by registryFetchIntervalSecondseureka.client.prefer-same-zone-eureka=true## The hostname if it can be determined at configuration time (otherwise it will be guessed from OS primitives).#eureka.instance.hostname=##  Initial status to register with rmeote Eureka server.#eureka.instance.initial-status=starting